name: Dependaboja
description: Merge dependabot PRs and sync aggregated branches with master

inputs:
  GITHUB_TOKEN:
    description: a github token for automerging PRs
    required: true
  merge_type:
    description: merge/rebase/squah. Default is "rebase"
    required: false
    default: rebase
  committer_name:
    required: false
    default: dependaboja
  committer_email:
    required: false
    default: --
  disabled_pr_targets:
    description: Comma separated list of branches wich are not allowed to be a PR target for auto merge. Default is 'master,main'
    required: false
    default: master,main
  sync_with:
    description: Comma separated list of branches which should be merged to agregated dependency branches automatically. Default is 'master,main'
    required: false
    default: master,main
  fetch_depth:
    description: We need a deep fetch in order to merge
    required: false
    default: master,main


outputs: {}
  # random-number:
  #   description: "Random number"
  #   value: ${{ steps.random-number-generator.outputs.random-id }}

runs:
  using: composite
  steps:
    - name: Run on PR
      if: ${{ github.event_name == 'pull_request' }}
      shell: bash
      run: |
        echo this was a pull request!
        echo ${{github.actor}}
        echo ${{github.ref}}
        echo ${{github.actor == 'dependabot[bot]'}}
        echo ${{startsWith(github.ref, 'dependabot/')}}

    - name: Shoud merge the PR?
      id: shouldmergepr
      if: >- # Check if it's dependabot
        ${{
          github.event_name == 'pull_request'
          && github.actor == 'dependabot[bot]'
          && startsWith(github.ref, 'dependabot/')
        }}
      shell: bash
      run: | # Check if the branch is enabled
        STR="${{inputs.disabled_pr_targets}}"
        readarray -d , -t MERGEREFS <<< "$STR"
        for REF in "${MERGEREFS[@]}"; do
          echo $REF
          if [ $REF == "${{github.base_ref}}" ]; then
            exit 0
          fi
          echo "::set-output name=shouldmerge::1"
        done

    - name: Merge the PR
      if: ${{steps.shouldmergepr.outputs.shouldmerge == 1}}
      shell: bash
      run: gh pr merge --auto --rebase "$PR_URL"
      env:
        PR_URL: ${{github.event.pull_request.html_url}}
        GITHUB_TOKEN: ${{inputs.GITHUB_TOKEN}}

    - name: Report skip branch
      if: ${{github.event_name == 'pull_request' && steps.shouldmergepr.outputs.shouldmerge != 1}}
      shell: bash
      run: echo "Skip this PR"



    - name: Run on push
      if: ${{ github.event_name == 'push' }}
      shell: bash
      run: echo this was a push! ${{inputs.GITHUB_TOKEN}}

    - name: Is it a branch to sync?
      id: shouldsync
      if: ${{ github.event_name == 'push' }}
      shell: bash
      run: |
        STR="${{inputs.sync_with}}"
        readarray -d , -t SYNCREFS <<< "$STR"
        for REF in "${SYNCREFS[@]}"; do
          echo $REF
          if [ $REF == "${{github.ref_name}}" ]; then
            echo "::set-output name=shouldsync::1"
          fi
        done

    - name: Calc merge type
      id: mergetype
      if: ${{steps.shouldsync.outputs.shouldsync == 1}}
      shell: bash
      run: |
        TYPE=${{inputs.merge_type}}
        if [ $TYPE == 'rebase' ]; then
          echo "::set-output name=cmd::rebase"
        elif [ $TYPE == 'merge' ]; then
          echo "::set-output name=cmd::merge"
        elif [ $TYPE == 'squash' ]; then
          echo "::set-output name=cmd::merge --squash"
        else
          exit 1
        fi

    - name: Show YQ version or try to install
      if: ${{steps.shouldsync.outputs.shouldsync == 1}}
      shell: bash
      run: |
        jq --version || echo "no-jq"
        yq --version || (echo "no-yq" && pip3 install yq)

    - name: Find dependabot config
      id: find_dependabot
      if: ${{steps.shouldsync.outputs.shouldsync == 1}}
      shell: bash
      run: |
        if [ -f ./.github/dependabot.yaml ]; then
          echo "::set-output name=ext::yaml"
        elif [ -f ./.github/dependabot.yml ]; then
          echo "::set-output name=ext::yml"
        else
          echo "Cannot find dependabot config"
          exit 1
        fi

    - name: Read dependabot config
      if: ${{steps.shouldsync.outputs.shouldsync == 1}}
      uses: actions/checkout@v2
      with:
        fetch-depth: ${{inputs.fetch_depth}}


    - name: Configure git environment
      if: ${{steps.shouldsync.outputs.shouldsync == 1}}
      shell: bash
      run: |
        git config user.name ${{inputs.committer_name}}
        git config user.email ${{inputs.committer_email}}

    - name: List refs
      if: ${{steps.shouldsync.outputs.shouldsync == 1}}
      shell: bash
      run: git branch -a

    - name: Read dependabot config
      if: ${{steps.shouldsync.outputs.shouldsync == 1}}
      shell: bash
      run: |
        CMD=${{steps.mergetype.outputs.cmd}}
        DEPCONF=./.github/dependabot.${{steps.find_dependabot.outputs.ext}}
        TARGETS=($(yq e '.updates[].["target-branch"]' $DEPCONF))
        for BRANCH in "${TARGETS[@]}"; do
          git checkout -b $BRANCH origin/$BRANCH
          git $CMD -X theirs ${{github.ref}}
          git push --force origin $BRANCH
        done

    - name: Report skip branch
      if: ${{github.event_name == 'push' && steps.shouldsync.outputs.shouldsync != 1}}
      shell: bash
      run: echo "Skip this branch"
