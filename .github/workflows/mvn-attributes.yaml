name: Check module name and version
on:
  workflow_call:
    inputs:
      path_to_java:
        description: A path where the java project is located
        default: '.'
        type: string
      root_proj_name:
        description: name of the root project that is located in `path_to_java`
        default: commons
        type: string
      path_to_mvn_settings:
        description: A path to maven settings.xml
        default: .github/workflows/mvn-settings.xml
        type: string
    secrets:
      GHCR_R_PAT:
        description: A token that can read from GitHub packages


jobs:
  attributes:
    name: Check module name and version
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Verify module
        id: proj
        run: |
          PROJ=$(echo '${{github.ref}}' | \
            sed -E 's|^refs/tags/([^/]*)/.*|\1|')
          if [ $PROJ == ${{inputs.root_proj_name}} ]; then
            PROJ_PATH=${{inputs.path_to_java}}
          else
            PROJ_PATH="${{inputs.path_to_java}}/$PROJ"
          fi;
          echo "PROJ_PATH=$PROJ_PATH"
          [ -d $PROJ_PATH ]
          echo "::set-output name=path::$PROJ_PATH"

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Auth to GitHub Maven
        run: |
          if [ -f ${{inputs.path_to_mvn_settings}} ]; then
            cp ${{inputs.path_to_mvn_settings}} ~/.m2/settings.xml
          fi

      - name: Verify version
        run: |
          cd ${{steps.proj.outputs.path}}
          VER=$(echo '${{github.ref}}' | \
            sed -E 's|^refs/tags/[^/]*/(.*)|\1|' | \
            sed -E 's|/|.|g')
          echo "VER=$VER"
          MVN_VER=$(mvn help:evaluate -Dexpression=project.version -pl . --non-recursive -q -DforceStdout)
          echo "MVN_VER=$MVN_VER"
          [ $VER == $MVN_VER ]
        #          echo "VER=$VER" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GHCR_R_PAT: ${{ secrets.GHCR_R_PAT }}

    outputs:
      path: ${{steps.proj.outputs.path}}

