name: Deploy to registry
on:
  workflow_call:
    inputs:
      path_to_java:
        description: A path where the whole java project is located
        default: '.'
        type: string
      path_to_module:
        description: A path where the java module is located
        type: string
        required: true
      path_to_mvn_settings:
        description: A path to maven settings.xml
        default: .github/workflows/mvn-settings.xml
        type: string
      path_to_mvn_output:
        description: A path where the java packages are installed
        default: ~/.m2/repository/net/evoja
        type: string
    secrets:
      GHCR_R_PAT:
        description: A token that can read from GitHub packages

env:
  poms_tpl: ${{ format('{0}/**/pom.xml', inputs.path_to_java) }}
  pom_tpl: ${{ format('{0}/pom.xml', inputs.path_to_java) }}


jobs:

  deploy:
    runs-on: ubuntu-latest
    env:
      PROJ_PATH: ${{inputs.path_to_module}}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Use cache
        id: cache
        uses: actions/cache@v2
        with:
          key: mvndeps-one-${{hashFiles(format('{0}/pom.xml', env.PROJ_PATH))}}
          restore-keys: |
            mvndeps-all-${{ hashFiles(env.poms_tpl) }}-${{ hashFiles(env.pom_tpl)}}
            mvndeps-all-${{ hashFiles(env.poms_tpl) }}
            mvndeps-all-
            mvndeps-one-
            mvndeps-
          path: |
            ~/.m2/repository

      - name: Show Maven and Java versions
        run: |
          echo "### Java"
          java -version
          echo "JAVA_HOME=$JAVA_HOME"
          printf "\n### Maven\n"
          mvn --version

      - name: Auth to GitHub Maven
        run: |
          if [ -f ${{inputs.path_to_mvn_settings}} ]; then
            cp ${{inputs.path_to_mvn_settings}} ~/.m2/settings.xml
          fi

      - name: Build and deploy
        run: |
          cd $PROJ_PATH
          mvn --batch-mode deploy -P purity-strict -pl .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GHCR_R_PAT: ${{ secrets.GHCR_R_PAT }}

      - name: Print test reports
        run: |
          cd $PROJ_PATH
          find . -type d  -name surefire-reports -exec sh -c "echo "==============================================================================="  && echo {} && cat {}/*.txt" \;

      - name: Delete our jars before caching maven dependencies
        run: |
          rm -rf ${{inputs.path_to_mvn_output}}
