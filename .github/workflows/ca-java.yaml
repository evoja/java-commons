name: Check that Java project is buildable
on:
  workflow_call:
    inputs:
      path_to_java:
        description: A path where the java project is located
        default: '.'
        type: string
      path_to_mvn_settings:
        description: A path to maven settings.xml
        default: .github/workflows/mvn-settings.xml
        type: string
      path_to_mvn_output:
        description: A path where the java packages are installed
        default: ~/.m2/repository/net/evoja
        type: string
    secrets:
      GHCR_R_PAT:
        description: A token that can read from GitHub packages

env:
  src_tpl: ${{ format('{0}/*/src/**', inputs.path_to_java) }}
  poms_tpl: ${{ format('{0}/**/pom.xml', inputs.path_to_java) }}
  pom_tpl: ${{ format('{0}/pom.xml', inputs.path_to_java) }}

jobs:

  checkingstamps:
    name: Checking stamps
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Calc hash of java project files
        id: javahash
        run: |
          echo "::set-output name=javahash::${{ hashFiles(env.src_tpl, env.poms_tpl, env.pom_tpl) }}"

      - name: Use cache
        id: cache
        uses: actions/cache@v2
        with:
          # add `run_attempt` in order to never use cached key
          key: checkingstamps-check-${{github.run_id}}-${{github.run_attempt}}
          restore-keys: |
            checkingstamps-all-${{steps.javahash.outputs.javahash}}
            checkingstamps-all-
            checkingstamps-one-
          path: |
            ~/evj-checkingstamps

      - name: Check stamps
        id: checkstamps
        run: |
          if [ -f ~/evj-checkingstamps/all-${{steps.javahash.outputs.javahash}}.txt ]; then
            echo "::set-output name=checked::1"
          fi;
    outputs:
      checked: ${{steps.checkstamps.outputs.checked}}
      javahash: ${{steps.javahash.outputs.javahash}}

  report-checked-before:
    needs: [checkingstamps]
    name: Report that Java build is skipped
    if: ${{needs.checkingstamps.outputs.checked == 1}}
    runs-on: ubuntu-latest
    steps:
      - name: Report
        run: |
          echo "Java build is skipped because the same source was checked before."


  build-java:
    name: Build and test java project
    needs: [checkingstamps]
    if: ${{needs.checkingstamps.outputs.checked != 1}}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Use cache for checking stamps
        id: cache-checkingstamps
        uses: actions/cache@v2
        with:
          key: checkingstamps-all-${{needs.checkingstamps.outputs.javahash}}
          restore-keys: |
            checkingstamps-all-
            checkingstamps-one-
          path: |
            ~/evj-checkingstamps

      - name: Use cache for maven dependencies
        id: cache
        uses: actions/cache@v2
        with:
          key: mvndeps-all-${{ hashFiles(env.poms_tpl) }}-${{ hashFiles(env.pom_tpl)}}
          restore-keys: |
            mvndeps-all-${{ hashFiles(env.poms_tpl) }}
            mvndeps-all-
            mvndeps-one-
            mvndeps-
          path: |
            ~/.m2/repository

      - name: Show Maven and Java versions
        run: |
          echo "### Java"
          java -version
          echo "JAVA_HOME=$JAVA_HOME"
          printf "\n### Maven\n"
          mvn --version

      - name: Auth to GitHub Maven
        run: |
          if [ -f ${{inputs.path_to_mvn_settings}} ]; then
            cp ${{inputs.path_to_mvn_settings}} ~/.m2/settings.xml
          fi

      - name: Build all java subprojects
        run: |
          cd ${{inputs.path_to_java}}
          mvn --batch-mode install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GHCR_R_PAT: ${{ secrets.GHCR_R_PAT }}

      - name: Print test reports
        run: |
          cd ${{inputs.path_to_java}}
          find . -type d  -name surefire-reports -exec sh -c "echo "==============================================================================="  && echo {} && cat {}/*.txt" \;

      - name: Write success stamps
        run: |
          mkdir -p ~/evj-checkingstamps
          touch ~/evj-checkingstamps/all-${{needs.checkingstamps.outputs.javahash}}.txt

      - name: Delete our jars before caching maven dependencies
        run: |
          rm -rf ${{inputs.path_to_mvn_output}}
